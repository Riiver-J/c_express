#include <stdio.h>
#define HEIGHT 3  
#define WIDTH 3 

void array_copy(int(*src)[WIDTH], int(*dst)[WIDTH], int i);	// int p[][WIDTH], int q[][WIDTH]
void array_print(int(*src)[WIDTH], int size);				// int p[][WIDTH]

int main(void)
{
	int score[HEIGHT][WIDTH] = { { 100, 30, 67 },{ 89, 50, 12 },{ 19, 60, 90 } };
	int tmp[HEIGHT][WIDTH];
	int size = sizeof(score);

	printf("<원본 2차원 배열>\n");
	array_print(score, size);

	array_copy(score, tmp, size);

	printf("\n<복사본 2차원 배열>\n");
	array_print(tmp, size);

	return 0;
}
void array_print(int(*p)[WIDTH], int size)
{
	/* 배열포인터 사용 시 1차원 배열로 접근 가능 */
	for (int i = 0; i < size/sizeof(*p); i++) {
		for (int j = 0; j < WIDTH; j++)
			printf("%3d ", (*p)[j]);
		p++;
		printf("\n");
	}
	
	
	/* 2차원 배열 인덱스 사용 (배열 인덱스로 접근하는 법은 알고 있으니 포인터로 접근해보는 방식해보기 (추후 배열인덱스 사용)
	int r, c;
	for (r = 0; r < HEIGHT; r++) {
		for (c = 0; c < WIDTH; c++)
			printf("%d ", (*(p + r))[c]);			// p[r][c]
		printf("\n");
	}
	printf("\n"); */
}

void array_copy(int(*psrc)[WIDTH], int(*pdst)[WIDTH], int size)
{
	/* 배열포인터 사용 시 1차원 배열로 접근 가능 */
	for (int i = 0; i < size / sizeof(*psrc); i++) {
		for (int j = 0; j < WIDTH; j++)
			(*pdst)[j] = (*psrc)[j];
		psrc++;
		pdst++;
	}

	/* 2차원 배열 인덱스 사용 (배열 인덱스로 접근하는 법은 알고 있으니 포인터로 접근해보는 방식해보기 (추후 배열인덱스 사용)
	int* p = *psrc;							// int* p = &psrc[0][0]
	int* end = (*(psrc + HEIGHT - 1) + (WIDTH - 1));		// int* end = &pdst[HEIGHT-1][WIDTH-1]

	int* q = pdst[0];

	while (p <= end) {
		*q++ = *p++;
	} */
}